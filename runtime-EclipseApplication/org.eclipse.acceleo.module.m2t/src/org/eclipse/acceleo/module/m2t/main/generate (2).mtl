[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://uidiagram')]


[**
 * The documentation of the template generateElement.
 * @param anUserInterface
 */]
[template public generateElement(anUserInterface : UserInterface)]
[comment @main/]
[file (anUserInterface.name.toUpperFirst().replace(' ','').concat('ViewPart.java'), false, 'UTF-8')]

package model;

public class [anUserInterface.name.toUpperFirst().replace(' ','')/]ViewPart  extends ViewPart {
	[let nombreInterfaz:String = anUserInterface.name.toUpperFirst().replace(' ','')]
    [/let]

	public static final String ID = "empresa.view.views.[name/]";
	
	[generateVarWidgets(anUserInterface)/]

	private final FormToolkit formToolkit = new FormToolkit(Display.getDefault());

	public RegistroClienteViewPart() {

	}
	
	public void createPartControl(Composite parent) {
		ScrolledComposite sc = new ScrolledComposite(parent, SWT.H_SCROLL |	SWT.V_SCROLL | SWT.BORDER);
		Composite container = formToolkit.createComposite(sc, SWT.NONE);

		sc.setContent(container);
		sc.setExpandHorizontal(true);
		sc.setExpandVertical(true);
		sc.setMinSize(container.computeSize(355, 349));
		formToolkit.paintBordersFor(container);

		lblNombre = formToolkit.createLabel(container,"Nombre :",SWT.NONE);
		lblNombre.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;
		lblNombre.setBounds(16,33,70,24);

		lblNombre.setFont(SWTResourceManager.getFont("Segoe UI",10,SWT.NORMAL));

		textNombre = formToolkit.createText(container, "New Text", SWT.NONE);
		textNombre.setText("nombre");
		textNombre.setBounds(108,33,213,24);

		textNombre.addKeyListener(new KeyAdapter() {
			@Override
			public void keyReleased(KeyEvent e) {

				//TODO Action textNombrede la view RegistroCliente
				String texto = textNombre.getText();
				textNombre_ModifyText_LogicalEvent (texto);
			}
		});
		lblApellidos = formToolkit.createLabel(container,"Apellidos :",SWT.NONE);
		lblApellidos.setForeground(SWTResourceManager.getColor(0, 0, 139)) ;
		lblApellidos.setBounds(16,75,77,25);

		lblApellidos.setFont(SWTResourceManager.getFont("Segoe UI",10,SWT.NORMAL));

		textApellidos = formToolkit.createText(container, "New Text", SWT.NONE);
		textApellidos.setText("apellidos");
		textApellidos.setBounds(108,75,213,25);

		textApellidos.addKeyListener(new KeyAdapter() {
			@Override
			public void keyReleased(KeyEvent e) {

				//TODO Action textApellidosde la view RegistroCliente
				String texto = textApellidos.getText();
				textApellidos_ModifyText_LogicalEvent (texto);
			}
		});
		btnRegistrarCliente = formToolkit.createButton(container,"Registrar Cliente",SWT.NONE);
		btnRegistrarCliente['[]'/].setBounds(92,135,137,25);

		btnRegistrarCliente.setFont(SWTResourceManager.getFont("Segoe UI",10,SWT.NORMAL));

		btnRegistrarCliente.addSelectionListener(new SelectionAdapter() {

			public void widgetSelected(SelectionEvent e) {
				//TODO Action ButtonbtnRegistrarClientede la view RegistroCliente
				btnRegistrarCliente_Selection_LogicalEvent ( "event" );
			}
		});
	
	}
[/file]
[/template]

[template public generateVarWidgets(anUserInterface : UserInterface)]
[for(widget : ModelElement | lstWidgets)]
[if (widget.oclIsKindOf(IndividuallContainer))]
[generateIndividualElement(widget)/]
[/if]
[if (widget.oclIsKindOf(GraphicalContainer))]
[generateGraphicalContainer(widget)/]
[/if]
[/for]
[/template]

[template public generateIndividualElement(anIndividualElement : ModelElement) post(trim()) ]
[if (anIndividualElement.oclIsKindOf(Label))]
private Label lbl[anIndividualElement.name.toLowerFirst().replace(' ','').replace(':','')/] 
[/if]
[if (anIndividualElement.oclIsKindOf(Button))]
private Button lbl[anIndividualElement.name.toLowerFirst().replace(' ','').replace(':','')/] 
[/if]
[if (anIndividualElement.oclIsKindOf(TextInput))]
private TextComponent lbl[anIndividualElement.name.toLowerFirst().replace(' ','').replace(':','')/] 
[/if]
[/template]



[template public generateGraphicalContainer(anGraphicalContainer : ModelElement)]
[if (anGraphicalContainer.oclIsKindOf(Group))]
Group group [anGraphicalContainer.name.toUpperFirst().replace(' ','')/]
[for(widget : ModelElement | anGraphicalContainer.oclAsType(GraphicalContainer).lstWidgets)]
[if (widget.oclIsKindOf(IndividuallContainer))]
[generateIndividualElement(widget)/]
[/if]
[if (widget.oclIsKindOf(GraphicalContainer))]
[generateGraphicalContainer(widget)/]
[/if]
[/for]
[/if]
[/template]