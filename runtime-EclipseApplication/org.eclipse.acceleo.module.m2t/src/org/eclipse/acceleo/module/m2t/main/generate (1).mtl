[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module generate('http://ui_diagram')]


[**
 * The documentation of the template generateElement.
 * @param anUserInterface
 */]
[template public generateElement(anUserInterface : UserInterface)]
[comment @main/]
[file (anUserInterface.title.replace(' ', '').trim()+'.html', false, 'UTF-8')]
<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        @import url("https://fonts.googleapis.com/css?family=Raleway:400,700");
*, *:before, *:after {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  font-family: "Raleway", sans-serif;
}

.container {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.container:hover .top:before, .container:hover .top:after, .container:hover .bottom:before, .container:hover .bottom:after, .container:active .top:before, .container:active .top:after, .container:active .bottom:before, .container:active .bottom:after {
  margin-left: 200px;
  transform-origin: -200px 50%;
  transition-delay: 0s;
}
.container:hover .center, .container:active .center {
  opacity: 1;
  transition-delay: 0.2s;
}

.top:before, .top:after, .bottom:before, .bottom:after {
  content: "";
  display: block;
  position: absolute;
  width: 200vmax;
  height: 200vmax;
  top: 50%;
  left: 50%;
  margin-top: -100vmax;
  transform-origin: 0 50%;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  z-index: 10;
  opacity: 0.65;
  transition-delay: 0.2s;
}

.top:before {
  transform: rotate(45deg);
  background: #e46569;
}
.top:after {
  transform: rotate(135deg);
  background: #ecaf81;
}

.bottom:before {
  transform: rotate(-45deg);
  background: #60b8d4;
}
.bottom:after {
  transform: rotate(-135deg);
  background: #3745b5;
}

.center {
  position: absolute;
  width: 400px;
  height: 400px;
  top: 50%;
  left: 50%;
  margin-left: -200px;
  margin-top: -200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 30px;
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  transition-delay: 0s;
  color: #333;
}
.center input {
  width: 100%;
  padding: 15px;
  margin: 5px;
  border-radius: 1px;
  border: 1px solid #ccc;
  font-family: inherit;
}
    </style>
</head>

<body>
    
<div class="container" onclick="onclick">
 
    <div class="top"></div>
    <div class="bottom"></div>
    <div class="center">
      <h2>[anUserInterface.title/]</h2>
         [generateCodeWidgets(anUserInterface)/]
      <h2>&nbsp;</h2>
    </div>
  </div>
</body>

</html>
[/file]
[/template]

[template public generateCodeWidgets(anUserInterface : UserInterface)]
[for(widget : ModelElement | lstModelElements)]
[if (widget.oclIsKindOf(GraphicalIndividual))]
[generateIndividualElement(widget)/]
[/if]
[if (widget.oclIsKindOf(GraphicalContainer))]

[/if]
[/for]
[/template]

[template public generateGraphicalContainer(anGraphicalContainer : ModelElement)]
[if (anGraphicalContainer.oclIsKindOf(Container)) ]
    <div>  
[for (widget : ModelElement | anGraphicalContainer.oclAsType(GraphicalContainer))]
[if (widget.oclIsKindOf(GraphicalIndividual))]
[generateIndividualElement(widget)/]
[/if]
[if (widget.oclIsKindOf(GraphicalContainer))]
[generateGraphicalContainer(widget)/]
[/if]
[/for]
    </div>
[/if]
[/template]

[template public generateIndividualElement(anIndividualElement : ModelElement)]
[if (anIndividualElement.oclIsKindOf(Label))]
  <label for="[anIndividualElement.title/]">[anIndividualElement.title/]</label>
[/if]

[if (anIndividualElement.oclIsKindOf(TextInput))]
    <input type="[anIndividualElement.title/]" placeholder="[anIndividualElement.title/]"></input>
[/if]

[/template]